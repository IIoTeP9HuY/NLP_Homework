# TODO
define C [b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|z];
define V [a|à|e|i|è|é|o|ò|ó|u|ù|ú|i|ì|í|î];

define Stem [C^<3 V C^<3]+;

define VerbForm [%+Pres     | 
                 %+Inf      |
                 %+PasPros  | 
                 %+Imp      |
                 %+PasRem   |
                 %+FutSim   | 
                 %+CongPres |  
                 %+CongImp  | 
                 %+Imperativo];

define Quantity [%+Pl | %+Sg];

define Person [%+1P | %+2P | %+3P];

define Gender [%+M | %+F];

define Conjunction [%+1C | %+2C | %+3C];

#define Tag [VerbForm | Person | Quantity | Conjunction | %+V];

define TagAppendixVerb %+V VerbForm Conjunction [Quantity Person | 0];

define TagAppendixNoun %+N Quantity Gender;

define Preprocess [C | V]* [TagAppendixNoun | TagAppendixVerb];

#define FromInf [[a | e | i] r e] -> 0 || _ TagAppendixVerb .#.;
 

define ProcessConj %+1C -> %^ a ,
                   %+2C -> %^ e ,
                   %+3C -> %^ i ;

define ProcessPerson %+Sg %+1P -> o  ,
                     %+Sg %+2P -> i  ,
                     %+Sg %+3P -> a  ,
                     %+Pl %+1P -> m o ,
                     %+Pl %+2P -> t e ,
                     %+Pl %+3P -> n o ;

#define ProcessGender %+Sg %+M -> %^ [o | e | ista | ma | ta] ,
#                     %+Pl %+M -> %^ [i | isti] ,
#                     %+Sg %+F -> %^ [a | e | ista | ione | i | tà | tù | cia | gia] ,
#                     %+Pl %+F -> %^ [e | i | iste | ioni | cie | gie | ce | ge] ;

define ProcessGender [i s t a %+N %+Sg %+M] -> %^ [i s t a] ,
                     [i s t a %+N %+Pl %+M] -> %^ [i s t i] ,
                     [o %+N %+Sg %+M] -> %^ [o] ,
                     [o %+N %+Pl %+M] -> %^ [i] ,
                     [a %+N %+Sg %+F] -> %^ [a] ,
                     [a %+N %+Pl %+F] -> %^ [e] ,
                     [i o n e %+N %+Sg %+F] -> %^ [i o n e] ,
                     [i o n e %+N %+Pl %+F] -> %^ [i o n i] ,
                     [i s t a %+N %+Sg %+F] -> %^ [i s t e] ,
                     [i s t a %+N %+Pl %+F] -> %^ [i s t e] ;

define Filter [C | V]* [[i s t a] | [i o n e]];

define ProcessNoun ProcessGender;

define ProcessVerbForm 
                   %+Inf %^ a -> %^ a r e , 
                   %+Inf %^ e -> %^ e r e ,
                   %+Inf %^ i -> %^ i r e ,
                  
                   %+Pres %^ [ a o | e o | i o ]     -> %^ o       ,
                   %+Pres %^ [ a i | e i | i i ]     -> %^ i       ,
                   %+Pres %^ a a                     -> %^ a       ,
                   %+Pres %^ [e a | i a]             -> %^ e       ,
                   %+Pres %^ [a m o | e m o | i m o] -> %^ i a m o ,
                   %+Pres %^ [e n o | i n o]         -> %^ o n o   ,

                   %+PasPros %^ a -> %^ a t o ,
                   # Here might be irregular words 
                   %+PasPros %^ e -> %^ u t o ,
                   %+PasPros %^ e -> %^ o     ,
                   %+PasPros %^ e -> %^ s o   ,
                   %+PasPros %^ e -> %^ s t o ,
                   %+PasPros %^ i -> %^ t t o ,

                   %+Imp %^ a -> %^ a v ,
                   %+Imp %^ e -> %^ e v ,
                   %+Imp %^ i -> %^ i v ,,
                   %+Imp %^ a -> %^ a v a || _ C ,,
                   %+Imp %^ e -> %^ e v a || _ C ,,
                   %+Imp %^ i -> %^ i v a || _ C ,,

                   %+PasRem %^ a o   -> %^ a i         ,
                   %+PasRem %^ e o   -> %^ e i         ,
                   %+PasRem %^ e o   -> %^ e t i       ,
                   %+PasRem %^ i o   -> %^ i i         ,
                   %+PasRem %^ a i   -> %^ a s t i     ,
                   %+PasRem %^ e i   -> %^ e s t i     ,
                   %+PasRem %^ i i   -> %^ i s t i     ,
                   %+PasRem %^ i a   -> %^ ì           , 
                   %+PasRem %^ a a   -> %^ ò           ,
                   %+PasRem %^ e a   -> %^ é           ,
                   %+PasRem %^ e a   -> %^ ette        ,
                   %+PasRem %^ a m   -> %^ a m m       ,
                   %+PasRem %^ e m   -> %^ e m m       ,
                   %+PasRem %^ i m   -> %^ i m m       ,
                   %+PasRem %^ a t   -> %^ a s t       ,
                   %+PasRem %^ e t   -> %^ e s t       ,
                   %+PasRem %^ i t   -> %^ i s t       ,
                   %+PasRem %^ a n   -> %^ a r o n     ,  
                   %+PasRem %^ e n o -> %^ e t t e r o ,  
                   %+PasRem %^ e n   -> %^ e r o n     ,  
                   %+PasRem %^ i n   -> %^ i r o n     ,

                   %+FutSim %^ [a | e | i] o   -> %^ ò       ,
                   %+FutSim %^ [a | e | i] i   -> %^ a i     ,
                   %+FutSim %^ [a | e | i] a   -> %^ à       ,
                   %+FutSim %^ [a | e | i] m o -> %^ e m o   ,
                   %+FutSim %^ [a | e | i] t e -> %^ e t e   ,
                   %+FutSim %^ [a | e | i] n o -> %^ a n n o ,
 
                   %+CongPres %^ [a | e | i] o   -> %^ e i         ,
                   %+CongPres %^ [a | e | i] i   -> %^ e s t i     ,
                   %+CongPres %^ [a | e | i] a   -> %^ e b b e     ,
                   %+CongPres %^ [a | e | i] m o -> %^ e m m o     ,
                   %+CongPres %^ [a | e | i] t e -> %^ e s t e     ,
                   %+CongPres %^ [a | e | i] n o -> %^ e b b e r o ,

                   %+CongImp %^ a [ o | e ]  -> %^ a s s i     ,
                   %+CongImp %^ e [ o | e ]  -> %^ e s s i     ,
                   %+CongImp %^ i [ o | e ]  -> %^ i s s i     ,
                   %+CongImp %^ a i          -> %^ a s s e     ,
                   %+CongImp %^ e i          -> %^ e s s e     ,
                   %+CongImp %^ i i          -> %^ i s s e     ,
                   %+CongImp %^ a m o        -> %^ a s s i m o ,
                   %+CongImp %^ e m o        -> %^ e s s i m o ,
                   %+CongImp %^ i m o        -> %^ i s s i m o ,
                   %+CongImp %^ a t e        -> %^ a s t e     ,
                   %+CongImp %^ e t e        -> %^ e s t e     ,
                   %+CongImp %^ i t e        -> %^ i s t e     , 
                   %+CongImp %^ a n o        -> %^ a s s e r o ,
                   %+CongImp %^ e n o        -> %^ e s s e r o ,
                   %+CongImp %^ i n o        -> %^ i s s e r o ,

                   %+Imperativo %^ a e             -> %^ a      ,
                   %+Imperativo %^ [e | i] e       -> %^ i      ,
                   %+Imperativo %^ a i             -> %^ i      ,
                   %+Imperativo %^ [e | i] i       -> %^ a      ,
                   %+Imperativo %^ [a | e | i] m o -> %^ i a m o;


define ProcessVerb ProcessPerson .o.
                   ProcessConj   .o.
                   ProcessVerbForm;
    
 
define CleanupForm %+V    -> 0 ,
                   %+N    -> 0 ,
                   %+Inf  -> 0 ,
                   %+Pres -> 0 ;

#define RemoveDoubleI ii -> i || _ *^>1 .#. ,,
#                     a -> 0 || _ %^ a;
    
define Cleanup  %^ -> 0;

define Grammar Preprocess    .o.
               [ProcessNoun .o.
               ProcessVerb] .o.
               CleanupForm   .o.
               #RemoveDoubleI .o.
               Cleanup         ;

regex Grammar;

save stack italian.bin

quit;
